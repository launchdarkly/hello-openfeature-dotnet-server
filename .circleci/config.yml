version: 2.1

orbs:
  win: circleci/windows@5.0.0
workflows:
  test:
    jobs:
      - build-run-linux:
          context: hello-world-demos
      - build-run-windows:
          context: hello-world-demos

  test-daily:
    triggers:
      - schedule:
          cron: "0 6 * * *"
          filters:
            branches:
              only: main
    jobs:
      - build-run-linux:
          context: hello-world-demos
      - build-run-windows:
          context: hello-world-demos

# This CI build ensures that the demo both compiles and works correctly. For the runtime test,
# we use an SDK key and flag key that are passed in via the CircleCI project configuration;
# the flag is configured to return a true value.

jobs:
  build-run-linux:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:6.0-focal
    steps:
      - checkout
      - run:
          name: insert SDK key and flag key into demo code
          command: |
            sed -i.bak "s/SdkKey *= *\".*\"/SdkKey = \"${LD_HELLO_WORLD_SDK_KEY}\"/" ./HelloOpenFeatureDotnet/Hello.cs
            sed -i.bak "s/FeatureFlagKey *= *\".*\"/FeatureFlagKey = \"${LD_HELLO_WORLD_FLAG_KEY_WITH_TRUE_VALUE}\"/" ./HelloOpenFeatureDotnet/Hello.cs
      - run:
          name: build demo
          command: dotnet build
      - run:
          name: run demo
          command: |
            dotnet run --project HelloOpenFeatureDotnet --framework net6.0 | tee output.txt
            grep "is True for this user" output.txt || (echo "Flag did not evaluate to expected true value" && exit 1)

  build-run-windows:
    executor:
      name: win/default
      shell: powershell.exe
    steps:
      - checkout
      - run:
          name: insert SDK key and flag key into demo code
          command: |
            $content = Get-Content -Path .\HelloOpenFeatureDotnet\Hello.cs
            $content = $content -Replace "SdkKey = `".*`"","SdkKey = `"$env:LD_HELLO_WORLD_SDK_KEY`""
            $content = $content -Replace "FeatureFlagKey = `".*`"","FeatureFlagKey = `"$env:LD_HELLO_WORLD_FLAG_KEY_WITH_TRUE_VALUE`""
            $content | Set-Content -Path .\HelloOpenFeatureDotnet\Hello.cs
      - run:
          name: build demo
          command: dotnet build HelloOpenFeatureDotnet.sln
      - run:
          name: run demo
          command: |
            dotnet run --project HelloOpenFeatureDotnet --framework net6.0 | tee-object -variable output
            if ( "$output" -notlike "*is True for this user*" )
            {
              write-output "Flag did not evaluate to expected true value"
              exit 1
            }
